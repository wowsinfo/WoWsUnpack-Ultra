#ifndef _WOWSUNPACKER_RUST_H_
#define _WOWSUNPACKER_RUST_H_

#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

/**
 * The number of supported game servers for C interop
 */
#define _GAME_SERVER_COUNT 3

/**
 * All supported game languages
 */
typedef enum GameLanguages {
  GAME_LANGUAGES_CS,
  GAME_LANGUAGES_DE,
  GAME_LANGUAGES_EN,
  GAME_LANGUAGES_ES,
  GAME_LANGUAGES_ES_MX,
  GAME_LANGUAGES_FR,
  GAME_LANGUAGES_IT,
  GAME_LANGUAGES_JA,
  GAME_LANGUAGES_KO,
  GAME_LANGUAGES_NL,
  GAME_LANGUAGES_PL,
  GAME_LANGUAGES_PT,
  GAME_LANGUAGES_PT_BR,
  GAME_LANGUAGES_RU,
  GAME_LANGUAGES_TH,
  GAME_LANGUAGES_UK,
  GAME_LANGUAGES_ZH,
  GAME_LANGUAGES_ZH_SG,
  GAME_LANGUAGES_ZH_TW,
} GameLanguages;

/**
 * All supported game servers
 */
typedef enum GameServer {
  GAME_SERVER_WW,
  GAME_SERVER_CN,
  GAME_SERVER_PT,
  GAME_SERVER_XX,
} GameServer;

/**
 *  * Get the game directory for a given server  * @param server: The server to get the game directory for  * @return A C string containing the game directory, or NULL if the server is not found
 */
const char *get_game_directory(int server);

/**
 *  * Get all available game directories  * @return A list of C strings containing the game directories, or NULL if none are found
 */
const char *const *get_all_game_directories(void);

/**
 *  * Free a C string allocated by Rust  * @param ptr: The pointer to free  * @return Nothing
 */
void free_cstring(const char *ptr);

/**
 *  * Free a list of C strings allocated by Rust  * @param list: The pointer to free  * @return Nothing
 */
void free_cstring_list(const char *const *list);

#endif /* _WOWSUNPACKER_RUST_H_ */
